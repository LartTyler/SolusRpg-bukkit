configuration:
    color:
        primary: green
        secondary: aqua
    logging:
        verbose: false
    factory:
        player: me.dbstudios.solusrpg.entities.player.SimpleRpgPlayer
        rpg-class: me.dbstudios.solusrpg.entities.SimpleRpgClass
        channel-logger: me.dbstudios.solusrpg.chat.SimpleChannelLogger
        aux-stat: me.dbstudios.solusrpg.entities.stats.SimpleAuxStat;
chat:
    enabled: true
    # Valid channel names are either:
    #   - the fully-qualified "GlobalChannel" variant
    #   - The display name of the channel (i.e. "Global" or "Server Announcements")
    #
    # Configurations for each will be found using the following:
    #   Spaces and special characters (as matched by /[_,.-]/) will be stripped ("Server Accouncements" -> "ServerAnnouncements")
    #   If the name does not end with "Channel" (case sensitive)...
    #       Append "Channel" to the name ("Gobal" -> "GlobalChannel")
    #   The channels directory (%rootdir%/config/channels/) is examined for ChannelName.yml ("GlobalChannel.yml")
    #   If a configuration is not found, an error will be emitted and Solus will proceed to the next entry
    channels:
        - Global
        - Whisper
        - Local
        - Yell
    # Log formats follow the definition for Java's String.format method, documented here: http://docs.oracle.com/javase/7/docs/api/java/util/Formatter.html#syntax
    log-format:
        log-original: true
        # For reference, the arguments passed to this format are in the order:
        #   [0] String:Sender Display Name
        #   [1] String:Sender Username
        #   [2] String:Message
        #   [3] Long:System Time
        #
        # The purpose of log-original* is to record the original, undistorted (if applicable) message sent by a user. Just
        # because a message was logged does not mean that there was anyone in range to recieve it.
        log-original-format: "[%3$tF %3$tH:%3$tM:%3$tS] %1$s (%0$s): %2$s"
        log-recieved: true
        # For reference, the arguments passed to this format are in the order:
        #   [0] String:Sender Display Name
        #   [1] String:Sender Username
        #   [2] String:Receiver Display Name
        #   [3] String:Receiver Username
        #   [4] String:Message
        #   [5] Long:System Time
        #
        # The purpose of log-recieved* is to record each message as recieved by all players in the channel. The message logged here
        # may be distorted, if applicable.
        log-recieved-format: "[%5$tF %5$tH:%5$tM:%5$tS] %1$s (%0$s) -> %3$s (%2$s): %4$s"
        log-joins: true
        # For reference, the arguments passed to this format are in the order:
        #   [0] String:Joiner Display Name
        #   [1] String:Joiner Username
        #   [2] Long:System Time
        log-joins-format: "[%2$tF %2$tH:%2$tM:%2$tS] %1$s (%0$s) has joined the channel."
        log-leaves: true
        # For reference, the arguments passed to this format are in the order:
        #   [0] String:Leaver Display Name
        #   [1] String:Leaver Username
        #   [2] Long:System Time
        log-leaves-format: "[%2$tF %2$tH:%2$tM:%2$tS] %1$s (%0$s) has left the channel."
classes:
    # Valid class names are either:
    #   - The fully-qualified "KnightClass" variant
    #   - The display name of the class (i.e. "Light Mage")
    #
    # Configurations for each will be found using the following:
    #   Spaces will be stripped ("Light Mage" -> "LightMage")
    #   If the name does not end in "Class" (case sensitive)...
    #       Append "Class" to the name ("LightMage" -> "LightMageClass")
    #   The classes directory (%rootdir%/config/classes/) is examined for ClassName.yml ("LightMageClass.yml")
    #   If a configuration is not found, an error will be emitted and Solus will proceed to the next entry
    #
    # Any class under the enabled section will be loaded as publicly available. This means that
    # if a player is ever given the option to select their class (for example, when Solus creates their
    # player data) they will be able to select the class as their own.
    enabled:
        - Knight
        - Paladin
        - Thief
        - Necromancer
        - Light Mage
aux-stats:
    # Valid auxiliary stat names are either:
    #   - The fully-qualified "LightWeaponMasteryStat" variant
    #   - The display name of the stat (i.e. "Light Weapon Mastery")
    #
    # Configurations for each will be found using the following:
    #   Spaces and special characters (as matched by /[_,.-]/) will be stripped ("Light Weapon Mastery" -> "LightWeaponMastery")
    #   If the name does not end in "Stat" (case sensitive)...
    #       Append "Stat" to the name ("LightWeaponMastery" -> "LightWeaponMasteryStat")
    #   The stats directory (%rootdir%/config/stats/) is examined for StatName.yml ("LightWeaponMasteryStat.yml")
    #   If a configuration is not found, an error will be emitted and Solus will proceed to the next entry
    enabled:
        - Light Weapon Mastery
        - Heavy Weapon Mastery
        - Light Armor Mastery
        - Heavy Armor Mastery
leveling:
    # The experience algorithm will always receive the player's level as a variable called "level".
    # This variable can be freely placed anywhere in the algorithm.
    #
    # Default algorithm adapted from the information here: http://minecraft.gamepedia.com/Experience#Formulas_and_Tables
    #
    # For more information on this, and all of SolusRpg's mathematical functions, please visit https://github.com/LartTyler/SolusRpg/wiki/Expressions-System.
    global-level-cost: if(level <= 15, 17 * level, if(between(level, 16, 30), 1.5 * level^2 - 29.5 * level + 360, 3.5 * level^2 - 151.5 * level + 2220))